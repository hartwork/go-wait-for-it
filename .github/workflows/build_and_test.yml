# Copyright (C) 2020 Sebastian Pipping <sebastian@pipping.org>
# Licensed under GPL v3 or later

name: Build and test

on:
- pull_request
- push

defaults:
  run:
    shell: bash

jobs:
  build_and_test:
    name: Build and test
    strategy:
      matrix:
        runs-on: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v3.3.0
      - uses: actions/setup-go@v3.5.0
        with:
          go-version: '1.14'
      - name: Build and test
        run: |-
          set -x
          cd v2
          go build -race -v ./cmd/wait-for-it
          ./wait-for-it --help
          ./wait-for-it \
              --timeout 2 \
              --service github.com:80 \
              --service github.com:443 \
              -- \
              sh -c 'exit 123' \
            || [ $? = 123 ]
          go test -race -v -coverprofile=cover.out ./...
          go tool cover -func=cover.out | tee cover-report.txt
          go tool cover -html=cover.out -o cover-report.htm
          [[ $(grep ^total: < cover-report.txt | awk '{print $3}') = 100.0% ]]
      - name: "Require empty diff for: goimports"
        run: |-
          set -x
          ( cd /tmp && go get golang.org/x/tools/cmd/goimports )
          git ls-files \*.go | xargs goimports -w
          git ls-files \*.go | xargs git diff --exit-code --
      - name: "Require empty diff for: gofmt"
        run: |-
          set -x
          git ls-files \*.go | xargs gofmt -s -w
          git ls-files \*.go | xargs git diff --exit-code --
      - name: "Require empty diff for: go mod tidy"
        run: |-
          set -x
          cd v2
          go mod tidy -v
          git diff --exit-code -- go.mod go.sum
      - name: "Create articate for coverage report"
        uses: actions/upload-artifact@v3
        with:
          name: coverage__${{ matrix.runs-on }}
          path: v2/cover*
          if-no-files-found: error
